testbot Version 2.0

Introduction
============

testbot is a Python package that aids in the automated execution of
(hopefully) any executable under OSs that provide a /proc
filesystem. testbot is mainly intended to be used for scientific
experimentation.

It consists of two components:

1. Package autobot: it provides the main services for programmers to
automate/monitor the execution of their systems.

2. Script testbot: it uses the services provided by autobot to be run
under simple scenarios.

autobot parses two input files:

. tb file: it contains the description of the command line arguments
to be passed to the executable. Every command line consists of a
single execution of the executable

. db file: it defines the schema of all tables to be stored by autobot
as a result of the experimentation. These tables can contain a bunch
of data including data retrieved from the standard output generated by
the executable or other particular data accessed by other Python
modules.

autobot accepts an arbitrary selection of solvers specified with
regular expressions. This is useful to compare algorithms. Every
executable generates a different sqlite3 database that can be used
later to access data or to plot figures directly (e.g., using
pipelines in gnuplot).

How to use
==========

The simplest usage of autobot is exemplified with the script
testbot. It takes the following mandatory arguments:

. solver: regular expression that identifies all executables to
monitor

. test: test specification file in the tb language

. db: db specification file in the db language

. timeout: maximum allotted time in seconds

. memory: maximum allotted memory in gigabytes

Other optional parameters that affect the behaviour of testbot are:

. check: seconds elapsed between successive pings to the running
executable. Autobot will gather some statistics at every ping

. output: prefix used in the name of the files that record the
standard output and standard error of every execution

. directory: target directory where all information is stored. autobot
automatically creates a subdirectory per executable and stores: config
information, system information and the standard output and standard
error generated

. bz2: in case the standard output/error are expected to be huge, it
is feasible to compress it with bzip2.

It also provides additional services for configuring the logging
services or to test whether the db/tb files are correctly parsed.

This information can be accessed with:

```
#!bash
   $ testbot.py --help
```

Configuration files are provided under examples/ For instance, try:

```
#!bash
   $ testbot.py --solver examples/solvers/eperimeter 
                --test examples/tests/8puzzle.tb 
                --db examples/db/example.db 
                --timeout 5 --memory 2 --check 0 --bz2
```

and examine the contents of the directory eperimeter/ just created

Further information is offered at the User's Manual and the
Programmer's Guide of testbot


Requirements
============

autobot requires PLY 3.4 or greater. It is currently designed for
Python 2.7.


License
========

testbot is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published by the
Free Software Foundation, either version 3 of the License, or (at your
option) any later version.

testbot is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with testbot.  If not, see <http://www.gnu.org/licenses/>.


Author
======

Carlos Linares Lopez
carlos.linares@uc3m.es
